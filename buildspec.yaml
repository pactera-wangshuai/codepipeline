version: 0.2

env:
  variables:
    version: "0.0.2-SNAPSHOT"
phases:
  install:
    runtime-versions:
      java: "openjdk8"
    commands:
#      - yum search jdk
      - yum install -y java-1.8.0-openjdk-devel.x86_64
      - yum install -y tar
      - yum install -y wget
#      - yum install -y which
      - wget -P /tmp https://mirror.bit.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
      - tar zxf /tmp/apache-maven-3.6.3-bin.tar.gz -C /tmp
      - ls /tmp/apache-maven-3.6.3 -al
      - export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.272.b10-1.amzn2.0.1.x86_64
      - export PATH=/tmp/apache-maven-3.6.3/bin:$JAVA_HOME/bin:$PATH
      - aws --version
      - java -version
#      - ls -lrt /etc/alternatives/java
      - echo $JAVA_HOME
      - echo $PATH
      - ls -al /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.272.b10-1.amzn2.0.1.x86_64/bin
  pre_build:
    commands:
      - mvn compile
#      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
#      - mvn package
#      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
#      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#  post_build:
#    commands:
#      - aws ecr batch-delete-image --repository-name $IMAGE_REPO_NAME --image-ids imageTag=$IMAGE_TAG
#      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG